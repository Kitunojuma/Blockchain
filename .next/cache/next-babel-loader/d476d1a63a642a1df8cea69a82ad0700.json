{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar WillStorage = require('./../ethereum/build/contracts/WillStorage.json');\n\nexport var wills = function wills() {\n  return _regeneratorRuntime.async(function wills$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(new window.web3.eth.Contract(WillStorage['abi'], '0x6E2bA713755eCdA013dD7f322EE6cff3116fd6D0'));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/nitin/Desktop/Blockchain-project/Blockchain-project/EtherWills/pages/wills.js"],"names":["WillStorage","require","wills","window","web3","eth","Contract"],"mappings":";;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,gDAAD,CAA3B;;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACP,IAAIC,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAApB,CAA6BN,WAAW,CAAC,KAAD,CAAxC,EAAiD,4CAAjD,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["const WillStorage = require('./../ethereum/build/contracts/WillStorage.json');\r\n\r\nexport const wills = async () => {\r\n\treturn await new window.web3.eth.Contract(WillStorage['abi'], '0x6E2bA713755eCdA013dD7f322EE6cff3116fd6D0'); \r\n};\r\n"]},"metadata":{},"sourceType":"module"}