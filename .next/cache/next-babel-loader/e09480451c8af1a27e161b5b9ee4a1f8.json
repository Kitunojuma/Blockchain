{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/layouts/Layout2';\nimport { Card, Button, Message } from 'semantic-ui-react';\nimport { Router } from '../../routes';\n\nconst {\n  ethwill\n} = require('./../EtherWills');\n\nclass WillShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permission: 'denied',\n      beneficiaries: []\n    });\n\n    _defineProperty(this, \"ping\", async event => {\n      event.preventDefault();\n      const {\n        willAddress\n      } = this.props;\n      console.log(willAddress);\n      const etherwill = await ethwill(willAddress);\n\n      if (Notification.permission === \"granted\") {\n        const ping = await etherwill.methods.deposit().send({\n          from: window.account,\n          value: 1000\n        });\n        console.log(ping);\n      } else if (Notification.permission !== \"denied\") {\n        Notification.requestPermission().then(function (permission) {\n          this.setState({\n            permission\n          });\n        });\n\n        if (permission === \"granted\") {\n          const ping = await etherwill.methods.deposit().send({\n            from: window.account,\n            value: 1000\n          });\n          console.log(ping);\n        } else {\n          alert('Permission not granted');\n        }\n      }\n\n      Router.pushRoute('/' + window.account);\n    });\n\n    _defineProperty(this, \"Back\", async event => {\n      event.preventDefault();\n      Router.pushRoute('/' + window.account);\n    });\n  }\n\n  static async getInitialProps(props) {\n    console.log(props.query.address);\n    return {\n      willAddress: props.query.address\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.willAddress);\n    const etherwill = await ethwill(this.props.willAddress);\n    console.log(\"HEll \", window.account);\n    const willInfo = await etherwill.methods.queryWill().call({\n      from: window.account\n    });\n    console.log(willInfo);\n    let mintues = Math.floor(willInfo[3] / 60);\n    let seconds = willInfo[3] % 60;\n    let date = mintues + \" minutes and \" + seconds + \" seconds\";\n    this.setState({\n      testor: willInfo[0],\n      share: willInfo[1],\n      beneficiaries: willInfo[2],\n      datevalue: date,\n      code: willInfo[4],\n      times_pinged: willInfo[5],\n      period: willInfo[6]\n    });\n  }\n\n  renderCards1() {\n    const testor = this.state.testor;\n    const datevalue = this.state.datevalue;\n    const code = this.state.code;\n    const period = this.state.period;\n    const items = [{\n      header: testor,\n      description: 'Account address of a testor.',\n      style: {\n        overflowWrap: 'break-word',\n        color: 'white'\n      }\n    }, {\n      header: datevalue,\n      description: 'Time Left before the will is Executable',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: code,\n      description: 'Code of your will',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: period + ' mintues',\n      description: 'Mentions the frequency with which you ping to the contract.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  renderCards2() {\n    console.log(this.state.beneficiaries);\n    const items = this.state.beneficiaries.map((benef, index) => {\n      let share = this.state.share[index];\n      return {\n        header: benef,\n        description: 'Share in the Will: ' + share + '%',\n        style: {\n          overflowWrap: 'break-word',\n          color: 'white'\n        }\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1000px'\n      }\n    }, __jsx(Layout, null, __jsx(\"h2\", {\n      className: \"ui icon center aligned header\",\n      style: {\n        color: 'white',\n        marginBottom: '30px',\n        marginTop: '30px'\n      }\n    }, __jsx(\"i\", {\n      \"aria-hidden\": \"true\",\n      class: \"file code icon\",\n      style: {\n        color: 'white'\n      }\n    }), \"Your Will\"), __jsx(Button, {\n      primary: true,\n      type: \"button\",\n      onClick: this.Back,\n      style: {\n        marginTop: '30px',\n        marginBottom: '15px'\n      }\n    }, \"Back\"), this.renderCards1(), this.renderCards2(), __jsx(Button, {\n      primary: true,\n      onClick: this.ping,\n      style: {\n        marginTop: '30px',\n        marginBottom: '15px'\n      }\n    }, \"Ping\"), __jsx(Message, {\n      warning: true\n    }, __jsx(Message.Header, null, \" YOU CAN ONLY PING WHEN THE TIME LEFT IS LESS THAN THE PERIOD MENTIONED ABOVE\")), __jsx(\"h2\", {\n      className: \"ui icon center aligned header\",\n      style: {\n        color: 'white',\n        marginBottom: '30px',\n        marginTop: '30px'\n      }\n    }, \"Number of times pinged: \", this.state.times_pinged)));\n  }\n\n}\n\nexport default WillShow;","map":{"version":3,"sources":["C:/Users/nitin/Desktop/Blockchain-project/Blockchain-project/EtherWills/pages/will/show.js"],"names":["React","Component","Layout","Card","Button","Message","Router","ethwill","require","WillShow","permission","beneficiaries","event","preventDefault","willAddress","props","console","log","etherwill","Notification","ping","methods","deposit","send","from","window","account","value","requestPermission","then","setState","alert","pushRoute","getInitialProps","query","address","componentDidMount","willInfo","queryWill","call","mintues","Math","floor","seconds","date","testor","share","datevalue","code","times_pinged","period","renderCards1","state","items","header","description","style","overflowWrap","color","renderCards2","map","benef","index","render","backgroundColor","height","marginBottom","marginTop","Back"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,mBAAtC;AACA,SAASC,MAAT,QAAuB,cAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCAQxB;AACPS,MAAAA,UAAU,EAAC,QADJ;AAEPC,MAAAA,aAAa,EAAE;AAFR,KARwB;;AAAA,kCAgFzB,MAAOC,KAAP,IAAiB;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,YAAMI,SAAS,GAAG,MAAMX,OAAO,CAACO,WAAD,CAA/B;;AACA,UAAIK,YAAY,CAACT,UAAb,KAA4B,SAAhC,EAA2C;AAC1C,cAAMU,IAAI,GAAG,MAAMF,SAAS,CAACG,OAAV,CAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC;AAAEC,UAAAA,IAAI,EAAEC,MAAM,CAACC,OAAf;AAAwBC,UAAAA,KAAK,EAAE;AAA/B,SAAjC,CAAnB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACM,OAHP,MAIW,IAAID,YAAY,CAACT,UAAb,KAA4B,QAAhC,EAA0C;AAC3CS,QAAAA,YAAY,CAACS,iBAAb,GAAiCC,IAAjC,CAAsC,UAAUnB,UAAV,EAAsB;AACxD,eAAKoB,QAAL,CAAc;AAACpB,YAAAA;AAAD,WAAd;AACZ,SAFQ;;AAGT,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC7B,gBAAMU,IAAI,GAAG,MAAMF,SAAS,CAACG,OAAV,CAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC;AAAEC,YAAAA,IAAI,EAAEC,MAAM,CAACC,OAAf;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WAAjC,CAAnB;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,SAHD,MAII;AACSW,UAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACV;;AACDzB,MAAAA,MAAM,CAAC0B,SAAP,CAAiB,MAAIP,MAAM,CAACC,OAA5B;AACA,KAtG+B;;AAAA,kCAwGzB,MAAMd,KAAN,IAAe;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACAP,MAAAA,MAAM,CAAC0B,SAAP,CAAiB,MAAIP,MAAM,CAACC,OAA5B;AACA,KA3G+B;AAAA;;AAChC,eAAaO,eAAb,CAA6BlB,KAA7B,EAAoC;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACmB,KAAN,CAAYC,OAAxB;AACA,WAAO;AACNrB,MAAAA,WAAW,EAAEC,KAAK,CAACmB,KAAN,CAAYC;AADnB,KAAP;AAGA;;AAOD,QAAMC,iBAAN,GAAyB;AACxBpB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,WAAvB;AACA,UAAMI,SAAS,GAAG,MAAMX,OAAO,CAAC,KAAKQ,KAAL,CAAWD,WAAZ,CAA/B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBQ,MAAM,CAACC,OAA3B;AACA,UAAMW,QAAQ,GAAG,MAAMnB,SAAS,CAACG,OAAV,CAAkBiB,SAAlB,GAA8BC,IAA9B,CAAmC;AAAEf,MAAAA,IAAI,EAAEC,MAAM,CAACC;AAAf,KAAnC,CAAvB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AACA,QAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAAC,CAAD,CAAR,GAAY,EAAvB,CAAd;AACA,QAAIM,OAAO,GAAGN,QAAQ,CAAC,CAAD,CAAR,GAAY,EAA1B;AACA,QAAIO,IAAI,GAAGJ,OAAO,GAAC,eAAR,GAAwBG,OAAxB,GAAgC,UAA3C;AACA,SAAKb,QAAL,CAAc;AACbe,MAAAA,MAAM,EAAER,QAAQ,CAAC,CAAD,CADH;AAEbS,MAAAA,KAAK,EAAET,QAAQ,CAAC,CAAD,CAFF;AAGb1B,MAAAA,aAAa,EAAE0B,QAAQ,CAAC,CAAD,CAHV;AAIbU,MAAAA,SAAS,EAAEH,IAJE;AAKbI,MAAAA,IAAI,EAAEX,QAAQ,CAAC,CAAD,CALD;AAMbY,MAAAA,YAAY,EAAEZ,QAAQ,CAAC,CAAD,CANT;AAOba,MAAAA,MAAM,EAAEb,QAAQ,CAAC,CAAD;AAPH,KAAd;AASA;;AAIDc,EAAAA,YAAY,GAAG;AACd,UAAMN,MAAM,GAAG,KAAKO,KAAL,CAAWP,MAA1B;AACA,UAAME,SAAS,GAAG,KAAKK,KAAL,CAAWL,SAA7B;AACA,UAAMC,IAAI,GAAI,KAAKI,KAAL,CAAWJ,IAAzB;AACA,UAAME,MAAM,GAAG,KAAKE,KAAL,CAAWF,MAA1B;AAEA,UAAMG,KAAK,GAAG,CACb;AACCC,MAAAA,MAAM,EAAET,MADT;AAECU,MAAAA,WAAW,EAAE,8BAFd;AAGCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,YAAhB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AAHR,KADa,EAMb;AACCJ,MAAAA,MAAM,EAAEP,SADT;AAECQ,MAAAA,WAAW,EAAE,yCAFd;AAGCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAHR,KANa,EAWb;AACCH,MAAAA,MAAM,EAAEN,IADT;AAECO,MAAAA,WAAW,EAAE,mBAFd;AAGCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAHR,KAXa,EAgBb;AACCH,MAAAA,MAAM,EAAEJ,MAAM,GAAC,UADhB;AAECK,MAAAA,WAAW,EAAE,6DAFd;AAGCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAHR,KAhBa,CAAd;AAuBA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEJ;AAAnB,MAAP;AACA;;AAEDM,EAAAA,YAAY,GAAG;AACd3C,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmC,KAAL,CAAWzC,aAAvB;AACA,UAAM0C,KAAK,GAAG,KAAKD,KAAL,CAAWzC,aAAX,CAAyBiD,GAAzB,CAA6B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5D,UAAIhB,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAX,CAAiBgB,KAAjB,CAAZ;AACA,aAAO;AACNR,QAAAA,MAAM,EAAEO,KADF;AAENN,QAAAA,WAAW,EAAE,wBAAsBT,KAAtB,GAA4B,GAFnC;AAGNU,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE,YAAhB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AAHD,OAAP;AAKA,KAPa,CAAd;AAQA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB,MAAP;AACA;;AA+BDU,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,MAAM,EAAE;AAApC;AAAZ,OACC,MAAC,MAAD,QACC;AACC,MAAA,SAAS,EAAC,+BADX;AAEC,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAE,OAAT;AAAkBQ,QAAAA,YAAY,EAAE,MAAhC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD;AAFR,OAIC;AAAG,qBAAY,MAAf;AAAsB,MAAA,KAAK,EAAC,gBAA5B;AAA6C,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT;AAApD,MAJD,cADD,EAQC,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,OAAO,EAAE,KAAKU,IAA5C;AAAkD,MAAA,KAAK,EAAI;AAACD,QAAAA,SAAS,EAAE,MAAZ;AAAmBD,QAAAA,YAAY,EAAE;AAAjC;AAA3D,cARD,EAWE,KAAKf,YAAL,EAXF,EAYE,KAAKQ,YAAL,EAZF,EAaC,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKvC,IAA9B;AAAoC,MAAA,KAAK,EAAE;AAAE+C,QAAAA,SAAS,EAAE,MAAb;AAAqBD,QAAAA,YAAY,EAAE;AAAnC;AAA3C,cAbD,EAgBC,MAAC,OAAD;AAAS,MAAA,OAAO;AAAhB,OACI,MAAC,OAAD,CAAS,MAAT,wFADJ,CAhBD,EAmBC;AACC,MAAA,SAAS,EAAC,+BADX;AAEC,MAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAE,OAAT;AAAkBQ,QAAAA,YAAY,EAAE,MAAhC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD;AAFR,mCAG0B,KAAKf,KAAL,CAAWH,YAHrC,CAnBD,CADD,CADD;AA4BA;;AA1I+B;;AA6IjC,eAAexC,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport { Card, Button, Message } from 'semantic-ui-react';\r\nimport { Router } from '../../routes';\r\nconst { ethwill } = require('./../EtherWills');\r\n\r\nclass WillShow extends Component {\r\n\tstatic async getInitialProps(props) {\r\n\t\tconsole.log(props.query.address);\r\n\t\treturn {\r\n\t\t\twillAddress: props.query.address\r\n\t\t};\r\n\t}\r\n\r\n\tstate = {\r\n\t\tpermission:'denied',\r\n\t\tbeneficiaries: []\r\n\t};\r\n\r\n\tasync componentDidMount(){\r\n\t\tconsole.log(this.props.willAddress)\r\n\t\tconst etherwill = await ethwill(this.props.willAddress);\r\n\t\tconsole.log(\"HEll \",window.account)\r\n\t\tconst willInfo = await etherwill.methods.queryWill().call({ from: window.account });\r\n\t\tconsole.log(willInfo)\r\n\t\tlet mintues = Math.floor(willInfo[3]/60)\r\n\t\tlet seconds = willInfo[3]%60;\r\n\t\tlet date = mintues+\" minutes and \"+seconds+\" seconds\";\r\n\t\tthis.setState({\r\n\t\t\ttestor: willInfo[0],\r\n\t\t\tshare: willInfo[1],\r\n\t\t\tbeneficiaries: willInfo[2],\r\n\t\t\tdatevalue: date,\r\n\t\t\tcode: willInfo[4],\r\n\t\t\ttimes_pinged: willInfo[5],\r\n\t\t\tperiod: willInfo[6]\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\r\n\trenderCards1() {\r\n\t\tconst testor = this.state.testor\r\n\t\tconst datevalue = this.state.datevalue\r\n\t\tconst code  = this.state.code;\r\n\t\tconst period = this.state.period;\r\n\r\n\t\tconst items = [\r\n\t\t\t{\r\n\t\t\t\theader: testor,\r\n\t\t\t\tdescription: 'Account address of a testor.',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word', color: 'white' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: datevalue,\r\n\t\t\t\tdescription: 'Time Left before the will is Executable',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: code,\r\n\t\t\t\tdescription: 'Code of your will',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: period+' mintues',\r\n\t\t\t\tdescription: 'Mentions the frequency with which you ping to the contract.',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn <Card.Group items={items} />;\r\n\t}\r\n\r\n\trenderCards2() {\r\n\t\tconsole.log(this.state.beneficiaries)\r\n\t\tconst items = this.state.beneficiaries.map((benef, index) => {\r\n\t\t\tlet share = this.state.share[index]\r\n\t\t\treturn {\r\n\t\t\t\theader: benef,\r\n\t\t\t\tdescription: 'Share in the Will: '+share+'%',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word', color: 'white' }\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn <Card.Group items={items} />;\r\n\t}\r\n\r\n\tping = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst { willAddress } = this.props;\r\n\t\tconsole.log(willAddress);\r\n\t\tconst etherwill = await ethwill(willAddress);\r\n\t\tif (Notification.permission === \"granted\") {\r\n\t\t\tconst ping = await etherwill.methods.deposit().send({ from: window.account, value: 1000 });\r\n\t\t\tconsole.log(ping);\r\n        }\r\n        else if (Notification.permission !== \"denied\") {\r\n            Notification.requestPermission().then(function (permission) {\r\n                this.setState({permission})\r\n\t\t\t});\r\n\t\t\tif (permission === \"granted\") {\r\n\t\t\t\tconst ping = await etherwill.methods.deposit().send({ from: window.account, value: 1000 });\r\n\t\t\t\tconsole.log(ping);\r\n\t\t\t}\r\n\t\t\telse{\r\n                alert('Permission not granted')\r\n            }\r\n\t\t}\r\n\t\tRouter.pushRoute('/'+window.account)\r\n\t};\r\n\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+window.account) \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tclassName=\"ui icon center aligned header\"\r\n\t\t\t\t\t\tstyle={{ color: 'white', marginBottom: '30px', marginTop: '30px' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i aria-hidden=\"true\" class=\"file code icon\" style={{ color: 'white' }} />\r\n\t\t\t\t\t\tYour Will\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back} style = {{marginTop: '30px',marginBottom: '15px'}}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{this.renderCards1()}\r\n\t\t\t\t\t{this.renderCards2()}\r\n\t\t\t\t\t<Button primary onClick={this.ping} style={{ marginTop: '30px', marginBottom: '15px' }}>\r\n\t\t\t\t\t\tPing\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Message warning>\r\n    \t\t\t\t\t<Message.Header> YOU CAN ONLY PING WHEN THE TIME LEFT IS LESS THAN THE PERIOD MENTIONED ABOVE</Message.Header>\r\n  \t\t\t\t\t</Message>\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tclassName=\"ui icon center aligned header\"\r\n\t\t\t\t\t\tstyle={{ color: 'white', marginBottom: '30px', marginTop: '30px' }}\r\n\t\t\t\t\t>Number of times pinged: {this.state.times_pinged}</h2>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WillShow;\r\n"]},"metadata":{},"sourceType":"module"}