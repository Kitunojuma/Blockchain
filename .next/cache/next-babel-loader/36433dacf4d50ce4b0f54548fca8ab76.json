{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/layouts/Layout2';\nimport { Message, Button, Dimmer, Header, Icon, Form } from 'semantic-ui-react';\nimport ipfs from './../../ethereum/ipfs';\nimport { Link, Router } from '../../routes';\n\nconst {\n  ethwill\n} = require('../EtherWills');\n\nconst bs58 = require('bs58');\n\nclass executeWill extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      code: '',\n      permission: 'denied',\n      pk: '',\n      share: '',\n      loading: true,\n      executed: false,\n      account: '',\n      willDetail: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      let etherwill = await ethwill(this.props.willAddress);\n      await etherwill.methods.executeWill(this.state.code).send({\n        from: this.state.account\n      });\n      let willDetails = await etherwill.methods.WillDetails().call({\n        from: this.state.account\n      });\n      const hashHex = \"1220\" + willDetails[0].slice(2);\n      const hashBytes = Buffer.from(hashHex, 'hex');\n      const pk_base58 = bs58.encode(hashBytes);\n      const hashHex1 = \"1220\" + willDetails[1].slice(2);\n      const hashBytes1 = Buffer.from(hashHex1, 'hex');\n      const s_base58 = bs58.encode(hashBytes1);\n      const pk_json = await ipfs.cat(pk_base58);\n      const s = await ipfs.cat(s_base58);\n      let pk = window.web3.eth.accounts.decrypt(JSON.parse(pk_json.toString()), s.toString());\n      this.setState({\n        active: true\n      });\n      this.setState({\n        pk: pk.privateKey.slice(2),\n        share: willDetails[2],\n        willDetail: true\n      });\n    });\n\n    _defineProperty(this, \"onClick\", async event => {\n      event.preventDefault();\n      let etherwill = await ethwill(this.props.willAddress);\n      let willDetails = await etherwill.methods.WillDetails().call({\n        from: this.state.account\n      });\n      console.log(\"L\");\n      const hashHex = \"1220\" + willDetails[0].slice(2);\n      const hashBytes = Buffer.from(hashHex, 'hex');\n      const pk_base58 = bs58.encode(hashBytes);\n      const hashHex1 = \"1220\" + willDetails[1].slice(2);\n      const hashBytes1 = Buffer.from(hashHex1, 'hex');\n      const s_base58 = bs58.encode(hashBytes1);\n      const pk_json = await ipfs.cat(pk_base58);\n      const s = await ipfs.cat(s_base58);\n      console.log(\"K\");\n      let pk = window.web3.eth.accounts.decrypt(JSON.parse(pk_json.toString()), s.toString());\n      console.log(pk.privateKey.slice(2));\n      this.setState({\n        pk: pk.privateKey.slice(2),\n        share: willDetails[2],\n        willDetail: true\n      });\n    });\n\n    _defineProperty(this, \"Back\", async event => {\n      event.preventDefault();\n      Router.pushRoute('/' + this.state.account + '/role');\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      willAddress: props.query.address\n    };\n  }\n\n  async componentDidMount() {\n    let etherwill = await ethwill(this.props.willAddress);\n    const executable = await etherwill.methods.checkExecutable().call({\n      from: window.account\n    });\n    let executed = await etherwill.methods.executed().call({\n      from: window.account\n    });\n    this.setState({\n      executed: executed,\n      account: window.account,\n      checkExecutable: executable,\n      loading: false\n    });\n  }\n\n  WillDetail() {\n    if (this.state.willDetail === true) {\n      return __jsx(Message, {\n        positive: true,\n        style: {\n          marginTop: '15px'\n        }\n      }, __jsx(Message.Header, null, \"Private Key: \", this.state.pk), __jsx(Message.Header, null, \"Your Share In The Will: \", this.state.share));\n    }\n  }\n\n  render() {\n    if (this.state.loading === false) {\n      if (this.state.checkExecutable === false) {\n        return __jsx(\"div\", {\n          style: {\n            backgroundColor: 'black',\n            height: '1000px'\n          }\n        }, __jsx(Layout, null, __jsx(Message, {\n          info: true\n        }, __jsx(Message.Header, null, \"Will not yet executable, please go back\")), __jsx(Button, {\n          primary: true,\n          type: \"button\",\n          onClick: this.Back\n        }, \"Back\")));\n      } else {\n        if (this.state.executed === false) {\n          return __jsx(\"div\", {\n            style: {\n              backgroundColor: 'black',\n              height: '1000px'\n            }\n          }, __jsx(Layout, null, __jsx(\"h2\", {\n            className: \"ui icon center aligned header\",\n            style: {\n              color: 'white',\n              marginBottom: '30px',\n              marginTop: '30px'\n            }\n          }, __jsx(\"i\", {\n            \"aria-hidden\": \"true\",\n            class: \"file code icon\",\n            style: {\n              color: 'white'\n            }\n          }), \"Will Execution\"), __jsx(Message, {\n            positive: true\n          }, __jsx(Message.Header, null, \"Code for will:\"), __jsx(\"p\", null, __jsx(\"b\", null, this.props.willAddress), \" for execution.\")), __jsx(Form, {\n            onSubmit: this.onSubmit\n          }, __jsx(Form.Field, null, __jsx(\"input\", {\n            value: this.state.code,\n            onChange: event => this.setState({\n              code: event.target.value\n            })\n          })), __jsx(Button, {\n            positive: true,\n            type: \"submit\",\n            value: \"Submit\",\n            content: \"Show\"\n          }, \"Execute Will\"), __jsx(Button, {\n            primary: true,\n            type: \"button\",\n            onClick: this.Back\n          }, \"Back\"), __jsx(\"div\", null, this.WillDetail()))));\n        } else {\n          return __jsx(\"div\", {\n            style: {\n              backgroundColor: 'black',\n              height: '1000px'\n            }\n          }, __jsx(Layout, null, __jsx(\"div\", null, __jsx(Button, {\n            positive: true,\n            type: \"button\",\n            onClick: this.onClick,\n            content: \"Show\"\n          }, \"Will Details\"), __jsx(Button, {\n            primary: true,\n            type: \"button\",\n            onClick: this.Back\n          }, \"Back\")), __jsx(\"div\", null, this.WillDetail())));\n        }\n      }\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: 'black',\n          height: '1000px'\n        }\n      }, __jsx(Layout, null, __jsx(\"div\", null, __jsx(Header, {\n        as: \"h1\",\n        icon: true,\n        textAlign: \"center\"\n      }, __jsx(Header.Content, {\n        style: {\n          color: 'white'\n        }\n      }, \"LOADING..\")))));\n    }\n  }\n\n}\n\nexport default executeWill;","map":{"version":3,"sources":["C:/Users/nitin/Documents/github/EtherWills/pages/will/executeWill.js"],"names":["React","Component","Layout","Message","Button","Dimmer","Header","Icon","Form","ipfs","Link","Router","ethwill","require","bs58","executeWill","code","permission","pk","share","loading","executed","account","willDetail","event","preventDefault","etherwill","props","willAddress","methods","state","send","from","willDetails","WillDetails","call","hashHex","slice","hashBytes","Buffer","pk_base58","encode","hashHex1","hashBytes1","s_base58","pk_json","cat","s","window","web3","eth","accounts","decrypt","JSON","parse","toString","setState","active","privateKey","console","log","pushRoute","getInitialProps","query","address","componentDidMount","executable","checkExecutable","WillDetail","marginTop","render","backgroundColor","height","Back","color","marginBottom","onSubmit","target","value","onClick"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,IAA1C,EAAgDC,IAAhD,QAA4D,mBAA5D;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,cAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,WAAN,SAA0Bd,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAO3B;AACPe,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,UAAU,EAAE,QAFL;AAGPC,MAAAA,EAAE,EAAE,EAHG;AAIPC,MAAAA,KAAK,EAAE,EAJA;AAKPC,MAAAA,OAAO,EAAE,IALF;AAMPC,MAAAA,QAAQ,EAAE,KANH;AAOPC,MAAAA,OAAO,EAAC,EAPD;AAQPC,MAAAA,UAAU,EAAE;AARL,KAP2B;;AAAA,sCAgCxB,MAAOC,KAAP,IAAiB;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,SAAS,GAAG,MAAMd,OAAO,CAAC,KAAKe,KAAL,CAAWC,WAAZ,CAA7B;AACA,YAAMF,SAAS,CAACG,OAAV,CAAkBd,WAAlB,CAA8B,KAAKe,KAAL,CAAWd,IAAzC,EAA+Ce,IAA/C,CAAoD;AAAEC,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWR;AAAnB,OAApD,CAAN;AACA,UAAIW,WAAW,GAAG,MAAMP,SAAS,CAACG,OAAV,CAAkBK,WAAlB,GAAgCC,IAAhC,CAAqC;AAAEH,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWR;AAAnB,OAArC,CAAxB;AACA,YAAMc,OAAO,GAAG,SAASH,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,CAAqB,CAArB,CAAzB;AACE,YAAMC,SAAS,GAAGC,MAAM,CAACP,IAAP,CAAYI,OAAZ,EAAqB,KAArB,CAAlB;AACF,YAAMI,SAAS,GAAG1B,IAAI,CAAC2B,MAAL,CAAYH,SAAZ,CAAlB;AACA,YAAMI,QAAQ,GAAG,SAAST,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,CAAqB,CAArB,CAA1B;AACE,YAAMM,UAAU,GAAGJ,MAAM,CAACP,IAAP,CAAYU,QAAZ,EAAsB,KAAtB,CAAnB;AACF,YAAME,QAAQ,GAAG9B,IAAI,CAAC2B,MAAL,CAAYE,UAAZ,CAAjB;AACA,YAAME,OAAO,GAAG,MAAMpC,IAAI,CAACqC,GAAL,CAASN,SAAT,CAAtB;AACA,YAAMO,CAAC,GAAG,MAAMtC,IAAI,CAACqC,GAAL,CAASF,QAAT,CAAhB;AACA,UAAI1B,EAAE,GAAG8B,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiCC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,QAAR,EAAX,CAAjC,EAAgER,CAAC,CAACQ,QAAF,EAAhE,CAAT;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAKD,QAAL,CAAc;AACbtC,QAAAA,EAAE,EAAEA,EAAE,CAACwC,UAAH,CAAcrB,KAAd,CAAoB,CAApB,CADS;AAEblB,QAAAA,KAAK,EAAEc,WAAW,CAAC,CAAD,CAFL;AAGbV,QAAAA,UAAU,EAAE;AAHC,OAAd;AAKA,KApDkC;;AAAA,qCAsDzB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,SAAS,GAAG,MAAMd,OAAO,CAAC,KAAKe,KAAL,CAAWC,WAAZ,CAA7B;AACA,UAAIK,WAAW,GAAG,MAAMP,SAAS,CAACG,OAAV,CAAkBK,WAAlB,GAAgCC,IAAhC,CAAqC;AAAEH,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWR;AAAnB,OAArC,CAAxB;AACAqC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,YAAMxB,OAAO,GAAG,SAASH,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,CAAqB,CAArB,CAAzB;AACE,YAAMC,SAAS,GAAGC,MAAM,CAACP,IAAP,CAAYI,OAAZ,EAAqB,KAArB,CAAlB;AACF,YAAMI,SAAS,GAAG1B,IAAI,CAAC2B,MAAL,CAAYH,SAAZ,CAAlB;AACA,YAAMI,QAAQ,GAAG,SAAST,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,CAAqB,CAArB,CAA1B;AACE,YAAMM,UAAU,GAAGJ,MAAM,CAACP,IAAP,CAAYU,QAAZ,EAAsB,KAAtB,CAAnB;AACF,YAAME,QAAQ,GAAG9B,IAAI,CAAC2B,MAAL,CAAYE,UAAZ,CAAjB;AACA,YAAME,OAAO,GAAG,MAAMpC,IAAI,CAACqC,GAAL,CAASN,SAAT,CAAtB;AACA,YAAMO,CAAC,GAAG,MAAMtC,IAAI,CAACqC,GAAL,CAASF,QAAT,CAAhB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAI1C,EAAE,GAAG8B,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiCC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,QAAR,EAAX,CAAjC,EAAgER,CAAC,CAACQ,QAAF,EAAhE,CAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY1C,EAAE,CAACwC,UAAH,CAAcrB,KAAd,CAAoB,CAApB,CAAZ;AACA,WAAKmB,QAAL,CAAc;AACbtC,QAAAA,EAAE,EAAEA,EAAE,CAACwC,UAAH,CAAcrB,KAAd,CAAoB,CAApB,CADS;AAEblB,QAAAA,KAAK,EAAEc,WAAW,CAAC,CAAD,CAFL;AAGbV,QAAAA,UAAU,EAAE;AAHC,OAAd;AAKA,KA3EkC;;AAAA,kCAyF5B,MAAMC,KAAN,IAAe;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACAd,MAAAA,MAAM,CAACkD,SAAP,CAAiB,MAAI,KAAK/B,KAAL,CAAWR,OAAf,GAAuB,OAAxC;AACA,KA5FkC;AAAA;;AACnC,eAAawC,eAAb,CAA6BnC,KAA7B,EAAoC;AACnC,WAAO;AACNC,MAAAA,WAAW,EAAED,KAAK,CAACoC,KAAN,CAAYC;AADnB,KAAP;AAGA;;AAaD,QAAMC,iBAAN,GAAyB;AACxB,QAAIvC,SAAS,GAAG,MAAMd,OAAO,CAAC,KAAKe,KAAL,CAAWC,WAAZ,CAA7B;AACA,UAAMsC,UAAU,GAAG,MAAMxC,SAAS,CAACG,OAAV,CAAkBsC,eAAlB,GAAoChC,IAApC,CAAyC;AAAEH,MAAAA,IAAI,EAAEgB,MAAM,CAAC1B;AAAf,KAAzC,CAAzB;AACA,QAAID,QAAQ,GAAG,MAAMK,SAAS,CAACG,OAAV,CAAkBR,QAAlB,GAA6Bc,IAA7B,CAAkC;AAACH,MAAAA,IAAI,EAAEgB,MAAM,CAAC1B;AAAd,KAAlC,CAArB;AACA,SAAKkC,QAAL,CAAc;AACbnC,MAAAA,QAAQ,EAAEA,QADG;AAEbC,MAAAA,OAAO,EAAE0B,MAAM,CAAC1B,OAFH;AAGb6C,MAAAA,eAAe,EAAED,UAHJ;AAIb9C,MAAAA,OAAO,EAAE;AAJI,KAAd;AAMA;;AAiDDgD,EAAAA,UAAU,GAAI;AACb,QAAG,KAAKtC,KAAL,CAAWP,UAAX,KAAwB,IAA3B,EAAgC;AAC/B,aACC,MAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,KAAK,EAAI;AAAC8C,UAAAA,SAAS,EAAE;AAAZ;AAA3B,SACC,MAAC,OAAD,CAAS,MAAT,yBAA8B,KAAKvC,KAAL,CAAWZ,EAAzC,CADD,EAEC,MAAC,OAAD,CAAS,MAAT,oCAAyC,KAAKY,KAAL,CAAWX,KAApD,CAFD,CADD;AAMA;AACD;;AAODmD,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKxC,KAAL,CAAWV,OAAX,KAAqB,KAAxB,EAA8B;AAC7B,UAAI,KAAKU,KAAL,CAAWqC,eAAX,KAA+B,KAAnC,EAA0C;AACzC,eACC;AAAK,UAAA,KAAK,EAAE;AAAEI,YAAAA,eAAe,EAAE,OAAnB;AAA4BC,YAAAA,MAAM,EAAE;AAApC;AAAZ,WACC,MAAC,MAAD,QACC,MAAC,OAAD;AAAS,UAAA,IAAI;AAAb,WACC,MAAC,OAAD,CAAS,MAAT,kDADD,CADD,EAIC,MAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,IAAI,EAAC,QAArB;AAA8B,UAAA,OAAO,EAAE,KAAKC;AAA5C,kBAJD,CADD,CADD;AAYA,OAbD,MAaO;AACN,YAAG,KAAK3C,KAAL,CAAWT,QAAX,KAAsB,KAAzB,EAA+B;AAC9B,iBACC;AAAK,YAAA,KAAK,EAAE;AAAEkD,cAAAA,eAAe,EAAE,OAAnB;AAA4BC,cAAAA,MAAM,EAAE;AAApC;AAAZ,aACC,MAAC,MAAD,QACC;AACC,YAAA,SAAS,EAAC,+BADX;AAEC,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,YAAY,EAAE,MAAhC;AAAwCN,cAAAA,SAAS,EAAE;AAAnD;AAFR,aAIC;AAAG,2BAAY,MAAf;AAAsB,YAAA,KAAK,EAAC,gBAA5B;AAA6C,YAAA,KAAK,EAAE;AAAEK,cAAAA,KAAK,EAAE;AAAT;AAApD,YAJD,mBADD,EAQC,MAAC,OAAD;AAAS,YAAA,QAAQ;AAAjB,aACC,MAAC,OAAD,CAAS,MAAT,yBADD,EAEC,iBACC,iBAAI,KAAK/C,KAAL,CAAWC,WAAf,CADD,oBAFD,CARD,EAcC,MAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKgD;AAArB,aACC,MAAC,IAAD,CAAM,KAAN,QACC;AACC,YAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWd,IADnB;AAEC,YAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKgC,QAAL,CAAc;AAAExC,cAAAA,IAAI,EAAEQ,KAAK,CAACqD,MAAN,CAAaC;AAArB,aAAd;AAFtB,YADD,CADD,EAOC,MAAC,MAAD;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,IAAI,EAAC,QAAtB;AAA+B,YAAA,KAAK,EAAC,QAArC;AAA8C,YAAA,OAAO,EAAC;AAAtD,4BAPD,EAUC,MAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAgB,YAAA,IAAI,EAAC,QAArB;AAA8B,YAAA,OAAO,EAAE,KAAKL;AAA5C,oBAVD,EAaC,mBAAM,KAAKL,UAAL,EAAN,CAbD,CAdD,CADD,CADD;AAkCA,SAnCD,MAoCI;AACH,iBACC;AAAK,YAAA,KAAK,EAAE;AAAEG,cAAAA,eAAe,EAAE,OAAnB;AAA4BC,cAAAA,MAAM,EAAE;AAApC;AAAZ,aACC,MAAC,MAAD,QACC,mBACC,MAAC,MAAD;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,IAAI,EAAC,QAAtB;AAA+B,YAAA,OAAO,EAAG,KAAKO,OAA9C;AAAuD,YAAA,OAAO,EAAC;AAA/D,4BADD,EAIC,MAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAgB,YAAA,IAAI,EAAC,QAArB;AAA8B,YAAA,OAAO,EAAE,KAAKN;AAA5C,oBAJD,CADD,EASC,mBAAM,KAAKL,UAAL,EAAN,CATD,CADD,CADD;AAiBA;AAED;AACD,KAxED,MAyEI;AACH,aACC;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,MAAM,EAAE;AAApC;AAAZ,SACC,MAAC,MAAD,QACC,mBACC,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,SAAS,EAAC;AAA/B,SACC,MAAC,MAAD,CAAQ,OAAR;AAAgB,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAAvB,qBADD,CADD,CADD,CADD,CADD;AAWA;AAED;;AArLkC;;AAwLpC,eAAe3D,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport { Message, Button, Dimmer, Header, Icon, Form } from 'semantic-ui-react';\r\nimport ipfs from './../../ethereum/ipfs';\r\nimport { Link, Router } from '../../routes';\r\nconst { ethwill } = require('../EtherWills');\r\nconst bs58 = require('bs58');\r\n\r\nclass executeWill extends Component {\r\n\tstatic async getInitialProps(props) {\r\n\t\treturn {\r\n\t\t\twillAddress: props.query.address,\r\n\t\t};\r\n\t}\r\n\r\n\tstate = {\r\n\t\tcode: '',\r\n\t\tpermission: 'denied',\r\n\t\tpk: '',\r\n\t\tshare: '',\r\n\t\tloading: true,\r\n\t\texecuted: false,\r\n\t\taccount:'',\r\n\t\twillDetail: false\r\n\t};\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet etherwill = await ethwill(this.props.willAddress);\r\n\t\tconst executable = await etherwill.methods.checkExecutable().call({ from: window.account });\r\n\t\tlet executed = await etherwill.methods.executed().call({from: window.account})\r\n\t\tthis.setState({\r\n\t\t\texecuted: executed,\r\n\t\t\taccount: window.account,\r\n\t\t\tcheckExecutable: executable,\r\n\t\t\tloading: false\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\r\n\tonSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet etherwill = await ethwill(this.props.willAddress);\r\n\t\tawait etherwill.methods.executeWill(this.state.code).send({ from: this.state.account });\r\n\t\tlet willDetails = await etherwill.methods.WillDetails().call({ from: this.state.account });\r\n\t\tconst hashHex = \"1220\" + willDetails[0].slice(2)\r\n  \t\tconst hashBytes = Buffer.from(hashHex, 'hex');\r\n\t\tconst pk_base58 = bs58.encode(hashBytes)\r\n\t\tconst hashHex1 = \"1220\" + willDetails[1].slice(2)\r\n  \t\tconst hashBytes1 = Buffer.from(hashHex1, 'hex');\r\n\t\tconst s_base58 = bs58.encode(hashBytes1)\r\n\t\tconst pk_json = await ipfs.cat(pk_base58)\r\n\t\tconst s = await ipfs.cat(s_base58)\r\n\t\tlet pk = window.web3.eth.accounts.decrypt(JSON.parse(pk_json.toString()),s.toString())\r\n\t\tthis.setState({ active: true });\r\n\t\tthis.setState({\r\n\t\t\tpk: pk.privateKey.slice(2),\r\n\t\t\tshare: willDetails[2],\r\n\t\t\twillDetail: true\r\n\t\t})\r\n\t};\r\n\r\n\tonClick = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tlet etherwill = await ethwill(this.props.willAddress);\r\n\t\tlet willDetails = await etherwill.methods.WillDetails().call({ from: this.state.account });\r\n\t\tconsole.log(\"L\")\r\n\t\tconst hashHex = \"1220\" + willDetails[0].slice(2)\r\n  \t\tconst hashBytes = Buffer.from(hashHex, 'hex');\r\n\t\tconst pk_base58 = bs58.encode(hashBytes)\r\n\t\tconst hashHex1 = \"1220\" + willDetails[1].slice(2)\r\n  \t\tconst hashBytes1 = Buffer.from(hashHex1, 'hex');\r\n\t\tconst s_base58 = bs58.encode(hashBytes1)\r\n\t\tconst pk_json = await ipfs.cat(pk_base58)\r\n\t\tconst s = await ipfs.cat(s_base58)\r\n\t\tconsole.log(\"K\")\r\n\t\tlet pk = window.web3.eth.accounts.decrypt(JSON.parse(pk_json.toString()),s.toString())\r\n\t\tconsole.log(pk.privateKey.slice(2))\r\n\t\tthis.setState({\r\n\t\t\tpk: pk.privateKey.slice(2),\r\n\t\t\tshare: willDetails[2],\r\n\t\t\twillDetail: true\r\n\t\t})\r\n\t}\r\n\r\n\tWillDetail () {\r\n\t\tif(this.state.willDetail===true){\r\n\t\t\treturn(\r\n\t\t\t\t<Message positive style = {{marginTop: '15px'}}>\r\n\t\t\t\t\t<Message.Header>Private Key: {this.state.pk}</Message.Header>\r\n\t\t\t\t\t<Message.Header>Your Share In The Will: {this.state.share}</Message.Header>\r\n\t\t\t \t</Message>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+this.state.account+'/role') \r\n\t}\r\n\trender() {\r\n\t\tif(this.state.loading===false){\r\n\t\t\tif (this.state.checkExecutable === false) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t\t<Message info>\r\n\t\t\t\t\t\t\t\t<Message.Header>Will not yet executable, please go back</Message.Header>\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back}>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Layout>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tif(this.state.executed===false){\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\t\t\tclassName=\"ui icon center aligned header\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: 'white', marginBottom: '30px', marginTop: '30px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i aria-hidden=\"true\" class=\"file code icon\" style={{ color: 'white' }} />\r\n\t\t\t\t\t\t\t\t\tWill Execution\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<Message positive>\r\n\t\t\t\t\t\t\t\t\t<Message.Header>Code for will:</Message.Header>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>{this.props.willAddress}</b> for execution.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.code}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ code: event.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t<Button positive type=\"submit\" value=\"Submit\" content=\"Show\">\r\n\t\t\t\t\t\t\t\t\t\tExecute Will\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<div>{this.WillDetail()}</div>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Layout>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button positive type=\"button\" onClick= {this.onClick} content=\"Show\">\r\n\t\t\t\t\t\t\t\t\t\tWill Details\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>{this.WillDetail()}</div>\r\n\t\t\t\t\t\t\t</Layout>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Header as=\"h1\" icon textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<Header.Content style={{ color: 'white' }}>LOADING..</Header.Content>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default executeWill;\r\n"]},"metadata":{},"sourceType":"module"}