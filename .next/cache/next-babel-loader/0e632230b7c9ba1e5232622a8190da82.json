{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layouts/Layout2';\nimport { Card, Button, Message } from 'semantic-ui-react';\nimport { Router } from '../../routes';\n\nvar _require = require('./../EtherWills'),\n    ethwill = _require.ethwill;\n\nvar WillShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WillShow, _Component);\n\n  function WillShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WillShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WillShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      permission: 'denied',\n      beneficiaries: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ping\", function _callee(event) {\n      var willAddress, etherwill, ping, _ping;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              willAddress = _this.props.willAddress;\n              console.log(willAddress);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(ethwill(willAddress));\n\n            case 5:\n              etherwill = _context.sent;\n\n              if (!(Notification.permission === \"granted\")) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(etherwill.methods.deposit().send({\n                from: window.account,\n                value: 1000\n              }));\n\n            case 9:\n              ping = _context.sent;\n              console.log(ping);\n              _context.next = 23;\n              break;\n\n            case 13:\n              if (!(Notification.permission !== \"denied\")) {\n                _context.next = 23;\n                break;\n              }\n\n              Notification.requestPermission().then(function (permission) {\n                this.setState({\n                  permission: permission\n                });\n              });\n\n              if (!(permission === \"granted\")) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(etherwill.methods.deposit().send({\n                from: window.account,\n                value: 1000\n              }));\n\n            case 18:\n              _ping = _context.sent;\n              console.log(_ping);\n              _context.next = 23;\n              break;\n\n            case 22:\n              alert('Permission not granted');\n\n            case 23:\n              Router.pushRoute('/' + window.account);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Back\", function _callee2(event) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              Router.pushRoute('/' + window.account);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WillShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var etherwill, willInfo, mintues, seconds, date;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(this.props.willAddress);\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(ethwill(this.props.willAddress));\n\n            case 3:\n              etherwill = _context3.sent;\n              console.log(\"HEll \", window.account);\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(etherwill.methods.queryWill().call({\n                from: window.account\n              }));\n\n            case 7:\n              willInfo = _context3.sent;\n              console.log(willInfo);\n              mintues = Math.floor(willInfo[3] / 60);\n              seconds = willInfo[3] % 60;\n              date = mintues + \" minutes and \" + seconds + \" seconds\";\n              this.setState({\n                testor: willInfo[0],\n                share: willInfo[1],\n                beneficiaries: willInfo[2],\n                datevalue: date,\n                code: willInfo[4],\n                times_pinged: willInfo[5],\n                period: willInfo[6]\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"renderCards1\",\n    value: function renderCards1() {\n      var testor = this.state.testor;\n      var datevalue = this.state.datevalue;\n      var code = this.state.code;\n      var period = this.state.period;\n      var items = [{\n        header: testor,\n        description: 'Account address of a testor.',\n        style: {\n          overflowWrap: 'break-word',\n          color: 'white'\n        }\n      }, {\n        header: datevalue,\n        description: 'Time Left before the will is Executable',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: code,\n        description: 'Code of your will',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: period + ' mintues',\n        description: 'Mentions the frequency with which you ping to the contract.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"renderCards2\",\n    value: function renderCards2() {\n      var _this2 = this;\n\n      console.log(this.state.beneficiaries);\n      var items = this.state.beneficiaries.map(function (benef, index) {\n        var share = _this2.state.share[index];\n        return {\n          header: benef,\n          description: 'Share in the Will: ' + share + '%',\n          style: {\n            overflowWrap: 'break-word',\n            color: 'white'\n          }\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: 'black',\n          height: '1000px'\n        }\n      }, __jsx(Layout, null, __jsx(\"h2\", {\n        className: \"ui icon center aligned header\",\n        style: {\n          color: 'white',\n          marginBottom: '30px',\n          marginTop: '30px'\n        }\n      }, __jsx(\"i\", {\n        \"aria-hidden\": \"true\",\n        \"class\": \"file code icon\",\n        style: {\n          color: 'white'\n        }\n      }), \"Your Will\"), __jsx(Button, {\n        primary: true,\n        type: \"button\",\n        onClick: this.Back,\n        style: {\n          marginTop: '30px',\n          marginBottom: '15px'\n        }\n      }, \"Back\"), this.renderCards1(), this.renderCards2(), __jsx(Button, {\n        primary: true,\n        onClick: this.ping,\n        style: {\n          marginTop: '30px',\n          marginBottom: '15px'\n        }\n      }, \"Ping\"), __jsx(Message, {\n        warning: true\n      }, __jsx(Message.Header, null, \" YOU CAN ONLY PING WHEN THE TIME LEFT IS LESS THAN THE PERIOD MENTIONED ABOVE\")), __jsx(\"h2\", {\n        className: \"ui icon center aligned header\",\n        style: {\n          color: 'white',\n          marginBottom: '30px',\n          marginTop: '30px'\n        }\n      }, \"Number of times pinged: \", this.state.times_pinged)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(props.query.address);\n              return _context4.abrupt(\"return\", {\n                willAddress: props.query.address\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return WillShow;\n}(Component);\n\nexport default WillShow;","map":{"version":3,"sources":["C:/Users/nitin/Documents/github/EtherWills/pages/will/show.js"],"names":["React","Component","Layout","Card","Button","Message","Router","require","ethwill","WillShow","permission","beneficiaries","event","preventDefault","willAddress","props","console","log","etherwill","Notification","methods","deposit","send","from","window","account","value","ping","requestPermission","then","setState","alert","pushRoute","queryWill","call","willInfo","mintues","Math","floor","seconds","date","testor","share","datevalue","code","times_pinged","period","state","items","header","description","style","overflowWrap","color","map","benef","index","backgroundColor","height","marginBottom","marginTop","Back","renderCards1","renderCards2","query","address"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport { Card, Button, Message } from 'semantic-ui-react';\r\nimport { Router } from '../../routes';\r\nconst { ethwill } = require('./../EtherWills');\r\n\r\nclass WillShow extends Component {\r\n\tstatic async getInitialProps(props) {\r\n\t\tconsole.log(props.query.address);\r\n\t\treturn {\r\n\t\t\twillAddress: props.query.address\r\n\t\t};\r\n\t}\r\n\r\n\tstate = {\r\n\t\tpermission:'denied',\r\n\t\tbeneficiaries: []\r\n\t};\r\n\r\n\tasync componentDidMount(){\r\n\t\tconsole.log(this.props.willAddress)\r\n\t\tconst etherwill = await ethwill(this.props.willAddress);\r\n\t\tconsole.log(\"HEll \",window.account)\r\n\t\tconst willInfo = await etherwill.methods.queryWill().call({ from: window.account });\r\n\t\tconsole.log(willInfo)\r\n\t\tlet mintues = Math.floor(willInfo[3]/60)\r\n\t\tlet seconds = willInfo[3]%60;\r\n\t\tlet date = mintues+\" minutes and \"+seconds+\" seconds\";\r\n\t\tthis.setState({\r\n\t\t\ttestor: willInfo[0],\r\n\t\t\tshare: willInfo[1],\r\n\t\t\tbeneficiaries: willInfo[2],\r\n\t\t\tdatevalue: date,\r\n\t\t\tcode: willInfo[4],\r\n\t\t\ttimes_pinged: willInfo[5],\r\n\t\t\tperiod: willInfo[6]\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\r\n\trenderCards1() {\r\n\t\tconst testor = this.state.testor\r\n\t\tconst datevalue = this.state.datevalue\r\n\t\tconst code  = this.state.code;\r\n\t\tconst period = this.state.period;\r\n\r\n\t\tconst items = [\r\n\t\t\t{\r\n\t\t\t\theader: testor,\r\n\t\t\t\tdescription: 'Account address of a testor.',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word', color: 'white' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: datevalue,\r\n\t\t\t\tdescription: 'Time Left before the will is Executable',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: code,\r\n\t\t\t\tdescription: 'Code of your will',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: period+' mintues',\r\n\t\t\t\tdescription: 'Mentions the frequency with which you ping to the contract.',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn <Card.Group items={items} />;\r\n\t}\r\n\r\n\trenderCards2() {\r\n\t\tconsole.log(this.state.beneficiaries)\r\n\t\tconst items = this.state.beneficiaries.map((benef, index) => {\r\n\t\t\tlet share = this.state.share[index]\r\n\t\t\treturn {\r\n\t\t\t\theader: benef,\r\n\t\t\t\tdescription: 'Share in the Will: '+share+'%',\r\n\t\t\t\tstyle: { overflowWrap: 'break-word', color: 'white' }\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn <Card.Group items={items} />;\r\n\t}\r\n\r\n\tping = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst { willAddress } = this.props;\r\n\t\tconsole.log(willAddress);\r\n\t\tconst etherwill = await ethwill(willAddress);\r\n\t\tif (Notification.permission === \"granted\") {\r\n\t\t\tconst ping = await etherwill.methods.deposit().send({ from: window.account, value: 1000 });\r\n\t\t\tconsole.log(ping);\r\n        }\r\n        else if (Notification.permission !== \"denied\") {\r\n            Notification.requestPermission().then(function (permission) {\r\n                this.setState({permission})\r\n\t\t\t});\r\n\t\t\tif (permission === \"granted\") {\r\n\t\t\t\tconst ping = await etherwill.methods.deposit().send({ from: window.account, value: 1000 });\r\n\t\t\t\tconsole.log(ping);\r\n\t\t\t}\r\n\t\t\telse{\r\n                alert('Permission not granted')\r\n            }\r\n\t\t}\r\n\t\tRouter.pushRoute('/'+window.account)\r\n\t};\r\n\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+window.account) \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tclassName=\"ui icon center aligned header\"\r\n\t\t\t\t\t\tstyle={{ color: 'white', marginBottom: '30px', marginTop: '30px' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i aria-hidden=\"true\" class=\"file code icon\" style={{ color: 'white' }} />\r\n\t\t\t\t\t\tYour Will\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back} style = {{marginTop: '30px',marginBottom: '15px'}}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{this.renderCards1()}\r\n\t\t\t\t\t{this.renderCards2()}\r\n\t\t\t\t\t<Button primary onClick={this.ping} style={{ marginTop: '30px', marginBottom: '15px' }}>\r\n\t\t\t\t\t\tPing\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Message warning>\r\n    \t\t\t\t\t<Message.Header> YOU CAN ONLY PING WHEN THE TIME LEFT IS LESS THAN THE PERIOD MENTIONED ABOVE</Message.Header>\r\n  \t\t\t\t\t</Message>\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tclassName=\"ui icon center aligned header\"\r\n\t\t\t\t\t\tstyle={{ color: 'white', marginBottom: '30px', marginTop: '30px' }}\r\n\t\t\t\t\t>Number of times pinged: {this.state.times_pinged}</h2>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WillShow;\r\n"]},"metadata":{},"sourceType":"module"}