{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Button, Message, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/layouts/Layout2';\nimport ipfs from './../../ethereum/ipfs';\nimport { Router } from '../../routes';\n\nvar _require = require('./../wills'),\n    wills = _require.wills;\n\nvar bs58 = require('bs58');\n\nvar WillNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WillNew, _Component);\n\n  function WillNew() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WillNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WillNew)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      privateKey: '',\n      stringSecretKey: '',\n      division: [{\n        beneficiary: '',\n        share: ''\n      }],\n      checkInTime: '',\n      errorMessage: '',\n      account: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee2(event) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true\n              });\n\n              if (Notification.permission !== 'denied') {\n                Notification.requestPermission().then(function _callee(permission) {\n                  var will, b, s, division, i, publicAddress, pk, pk_json, pk_bs58, s_bs58, pk_bytes, s_bytes, pk_hash, s_hash;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(permission === 'granted')) {\n                            _context.next = 44;\n                            break;\n                          }\n\n                          _this.setState({\n                            loading: true,\n                            errorMessage: ''\n                          });\n\n                          _context.next = 4;\n                          return _regeneratorRuntime.awrap(wills());\n\n                        case 4:\n                          will = _context.sent;\n                          b = [];\n                          s = [];\n                          division = _this.state.division;\n                          i = 0;\n\n                        case 9:\n                          if (!(i < _this.state.division.length)) {\n                            _context.next = 20;\n                            break;\n                          }\n\n                          console.log(_this.state.division[i]);\n                          _context.next = 13;\n                          return _regeneratorRuntime.awrap(window.torus.getPublicAddress({\n                            verifier: \"google\",\n                            verifierId: division[i].beneficiary\n                          }));\n\n                        case 13:\n                          publicAddress = _context.sent;\n                          console.log(publicAddress);\n                          b.push(publicAddress);\n                          s.push(division[i].share);\n\n                        case 17:\n                          i++;\n                          _context.next = 9;\n                          break;\n\n                        case 20:\n                          pk = window.web3.eth.accounts.encrypt(_this.state.privateKey, _this.state.stringSecretKey);\n                          pk_json = _JSON$stringify(pk);\n                          _context.next = 24;\n                          return _regeneratorRuntime.awrap(ipfs.add(Buffer.from(pk_json)));\n\n                        case 24:\n                          pk_bs58 = _context.sent;\n                          _context.next = 27;\n                          return _regeneratorRuntime.awrap(ipfs.add(Buffer.from(_this.state.stringSecretKey)));\n\n                        case 27:\n                          s_bs58 = _context.sent;\n                          pk_bytes = bs58.decode(pk_bs58[0].hash);\n                          s_bytes = bs58.decode(s_bs58[0].hash);\n                          pk_hash = '0x' + pk_bytes.slice(2).toString('hex');\n                          s_hash = '0x' + s_bytes.slice(2).toString('hex');\n                          _context.prev = 32;\n                          _context.next = 35;\n                          return _regeneratorRuntime.awrap(will.methods.WillCreation(b, s, pk_hash, s_hash, _this.state.checkInTime).send({\n                            from: _this.state.account\n                          }));\n\n                        case 35:\n                          _context.next = 40;\n                          break;\n\n                        case 37:\n                          _context.prev = 37;\n                          _context.t0 = _context[\"catch\"](32);\n\n                          _this.setState({\n                            errorMessage: _context.t0.message\n                          });\n\n                        case 40:\n                          _this.setState({\n                            loading: false\n                          });\n\n                          Router.pushRoute('/' + window.account);\n                          _context.next = 45;\n                          break;\n\n                        case 44:\n                          alert(\"Application not accessible\");\n\n                        case 45:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, [[32, 37]]);\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addDivision\", function _callee3(event) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState(function (prevState) {\n                return {\n                  division: [].concat(_toConsumableArray(prevState.division), [{\n                    beneficiary: '',\n                    share: ''\n                  }])\n                };\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Back\", function _callee4(event) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              event.preventDefault();\n              Router.pushRoute('/' + _this.state.account);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WillNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.setState({\n                account: window.account\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"handleRemoveBeneficiary\",\n    value: function handleRemoveBeneficiary(idx) {\n      var someArray = this.state.division;\n      someArray.splice(idx, 1);\n      this.setState({\n        division: someArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: 'black',\n          height: '1500px'\n        }\n      }, __jsx(Layout, null, __jsx(\"div\", {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(\"h2\", {\n        className: \"ui icon center aligned header\",\n        style: {\n          color: 'white'\n        }\n      }, __jsx(\"i\", {\n        \"aria-hidden\": \"true\",\n        \"class\": \"file code icon\",\n        style: {\n          color: 'white'\n        }\n      }), \"Create A New Will Here\")), __jsx(Button, {\n        primary: true,\n        type: \"button\",\n        onClick: this.Back,\n        style: {\n          marginTop: '30px',\n          marginBottom: '15px'\n        }\n      }, \"Back\"), __jsx(\"div\", {\n        className: \"ui container\"\n      }, __jsx(\"h3\", {\n        className: \"ui dividing header\",\n        style: {\n          color: 'white',\n          fontSize: '1.5em'\n        }\n      }, \"Testor Infomation\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", {\n        style: {\n          color: 'white',\n          fontSize: '1.2em'\n        }\n      }, \"Private Key\"), __jsx(\"input\", {\n        type: \"password\",\n        value: this.state.privateKey,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            privateKey: event.target.value\n          });\n        }\n      })), __jsx(\"h3\", {\n        className: \"ui dividing header\",\n        style: {\n          color: 'white',\n          fontSize: '1.5em'\n        }\n      }, \"Information For The Hashing Of Your Private Key\"), __jsx(Form.Field, null, __jsx(\"label\", {\n        style: {\n          color: 'white',\n          fontSize: '1.2em'\n        }\n      }, \"Secret Key\"), __jsx(\"input\", {\n        value: this.state.stringSecretKey,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            stringSecretKey: event.target.value\n          });\n        }\n      })), __jsx(\"h3\", {\n        className: \"ui dividing header\",\n        style: {\n          color: 'white',\n          fontSize: '1.5em'\n        }\n      }, \"Beneficiary Information\"), this.state.division.map(function (val, idx) {\n        var beneficiaryId = \"beneficiary-\".concat(idx),\n            shareId = \"share-\".concat(idx);\n        return __jsx(\"div\", {\n          key: idx\n        }, __jsx(\"div\", {\n          style: {\n            marginTop: '15px'\n          }\n        }, __jsx(Form.Field, null, __jsx(\"label\", {\n          htmlFor: beneficiaryId,\n          style: {\n            color: 'white',\n            fontSize: '1.2em'\n          }\n        }, \"Google email address for Beneficiary #\".concat(idx + 1)), __jsx(\"input\", {\n          type: \"text\",\n          name: beneficiaryId,\n          \"data-id\": idx,\n          id: beneficiaryId,\n          value: _this2.state.division[idx].beneficiary,\n          onChange: function onChange(e) {\n            var division = _toConsumableArray(_this2.state.division);\n\n            division[e.target.dataset.id][e.target.className] = e.target.value;\n\n            _this2.setState({\n              division: division\n            });\n          },\n          className: \"beneficiary\"\n        }))), __jsx(\"div\", {\n          style: {\n            marginTop: '15px'\n          }\n        }, __jsx(Form.Field, null, __jsx(\"label\", {\n          htmlFor: shareId,\n          style: {\n            color: 'white',\n            fontSize: '1.2em'\n          }\n        }, \"Percentage to be given to Beneficiary #\".concat(idx + 1)), __jsx(\"input\", {\n          type: \"number\",\n          name: shareId,\n          \"data-id\": idx,\n          id: shareId,\n          value: _this2.state.division[idx].share,\n          onChange: function onChange(e) {\n            var division = _toConsumableArray(_this2.state.division);\n\n            division[e.target.dataset.id][e.target.className] = e.target.value;\n\n            _this2.setState({\n              division: division\n            });\n          },\n          className: \"share\"\n        }))));\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '15px'\n        }\n      }, __jsx(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        onClick: this.addDivision\n      }, __jsx(Icon, {\n        name: \"plus\"\n      }), \"Beneficiary\"), __jsx(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        onClick: function onClick() {\n          _this2.state.division.map(function (val, idx) {\n            _this2.handleRemoveBeneficiary(idx);\n          });\n        }\n      }, __jsx(Icon, {\n        name: \"minus\"\n      }), \"Beneficiary\")), __jsx(\"h3\", {\n        className: \"ui dividing header\",\n        style: {\n          color: 'white',\n          fontSize: '1.5em'\n        }\n      }, \"Ping Information\"), __jsx(Form.Field, null, __jsx(\"label\", {\n        style: {\n          color: 'white',\n          fontSize: '1.2em'\n        }\n      }, \"Periodic CheckIn (In minutes)\"), __jsx(\"input\", {\n        type: \"number\",\n        value: this.state.checkInTime,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            checkInTime: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        primary: true,\n        type: \"submit\",\n        value: \"Submit\",\n        loading: this.state.loading\n      }, \"Create Will\")))));\n    }\n  }]);\n\n  return WillNew;\n}(Component);\n\nexport default WillNew;","map":{"version":3,"sources":["C:/Users/nitin/Documents/github/EtherWills/pages/will/new.js"],"names":["React","Component","Form","Button","Message","Icon","Layout","ipfs","Router","require","wills","bs58","WillNew","privateKey","stringSecretKey","division","beneficiary","share","checkInTime","errorMessage","account","loading","event","preventDefault","setState","Notification","permission","requestPermission","then","will","b","s","state","i","length","console","log","window","torus","getPublicAddress","verifier","verifierId","publicAddress","push","pk","web3","eth","accounts","encrypt","pk_json","add","Buffer","from","pk_bs58","s_bs58","pk_bytes","decode","hash","s_bytes","pk_hash","slice","toString","s_hash","methods","WillCreation","send","message","pushRoute","alert","prevState","idx","someArray","splice","backgroundColor","height","marginTop","color","Back","marginBottom","fontSize","onSubmit","target","value","map","val","beneficiaryId","shareId","e","dataset","id","className","addDivision","handleRemoveBeneficiary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Message, Icon } from 'semantic-ui-react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport ipfs from './../../ethereum/ipfs';\r\nimport { Router } from '../../routes';\r\nconst { wills } = require('./../wills');\r\nconst bs58 = require('bs58');\r\n\r\nclass WillNew extends Component {\r\n\tstate = {\r\n\t\tprivateKey: '',\r\n\t\tstringSecretKey: '',\r\n\t\tdivision: [ { beneficiary: '', share: '' } ],\r\n\t\tcheckInTime: '',\r\n\t\terrorMessage: '',\r\n\t\taccount: '',\r\n\t\tloading: false\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.setState({ account: window.account });\r\n\t}\r\n\r\n\tonSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true})\r\n\t\tif(Notification.permission!=='denied'){\r\n\t\t\tNotification.requestPermission().then( async (permission)=>{\r\n\t\t\t\tif(permission==='granted'){\r\n\t\t\t\t\tthis.setState({ loading: true, errorMessage: '' });\r\n\t\t\t\t\tlet will = await wills();\r\n\t\t\t\t\tlet b = [];\r\n\t\t\t\t\tlet s = [];\r\n\t\t\t\t\tlet division = this.state.division;\r\n\t\t\t\t\tfor (let i = 0; i < this.state.division.length; i++) {\r\n\t\t\t\t\t\tconsole.log(this.state.division[i]);\r\n\t\t\t\t\t\tlet publicAddress = await window.torus.getPublicAddress({\r\n\t\t\t\t\t\t\tverifier: \"google\",\r\n  \t\t\t\t\t\t\tverifierId: division[i].beneficiary\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(publicAddress);\r\n\t\t\t\t\t\tb.push(publicAddress);\r\n\t\t\t\t\t\ts.push(division[i].share);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst pk = window.web3.eth.accounts.encrypt(this.state.privateKey, this.state.stringSecretKey);\r\n\t\t\t\t\tconst pk_json = JSON.stringify(pk);\r\n\t\t\t\t\tconst pk_bs58 = await ipfs.add(Buffer.from(pk_json));\r\n\t\t\t\t\tconst s_bs58 = await ipfs.add(Buffer.from(this.state.stringSecretKey));\r\n\t\t\t\t\tconst pk_bytes = bs58.decode(pk_bs58[0].hash);\r\n\t\t\t\t\tconst s_bytes = bs58.decode(s_bs58[0].hash);\r\n\t\t\t\t\tconst pk_hash = '0x' + pk_bytes.slice(2).toString('hex');\r\n\t\t\t\t\tconst s_hash = '0x' + s_bytes.slice(2).toString('hex');\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait will.methods.WillCreation(b, s, pk_hash, s_hash, this.state.checkInTime).send({\r\n\t\t\t\t\t\t\tfrom: this.state.account\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthis.setState({ errorMessage: err.message });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\t\tRouter.pushRoute('/'+window.account)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(\"Application not accessible\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\taddDivision = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tdivision: [ ...prevState.division, { beneficiary: '', share: '' } ]\r\n\t\t}));\r\n\t};\r\n\r\n\thandleRemoveBeneficiary(idx) {\r\n\t\tlet someArray = this.state.division;\r\n\t\tsomeArray.splice(idx, 1);\r\n\t\tthis.setState({ division: someArray });\r\n\t}\r\n\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+this.state.account) \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1500px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<div style={{ marginTop: '20px' }}>\r\n\t\t\t\t\t\t<h2 className=\"ui icon center aligned header\" style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t<i aria-hidden=\"true\" class=\"file code icon\" style={{ color: 'white' }} />\r\n\t\t\t\t\t\t\tCreate A New Will Here\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back} style = {{marginTop: '30px',marginBottom: '15px'}}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<div className=\"ui container\">\r\n\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\tTestor Infomation\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Private Key</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.privateKey}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ privateKey: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tInformation For The Hashing Of Your Private Key\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Secret Key</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.stringSecretKey}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ stringSecretKey: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tBeneficiary Information\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t{this.state.division.map((val, idx) => {\r\n\t\t\t\t\t\t\t\tlet beneficiaryId = `beneficiary-${idx}`,\r\n\t\t\t\t\t\t\t\t\tshareId = `share-${idx}`;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'white', fontSize: '1.2em' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>{`Google email address for Beneficiary #${idx + 1}`}</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.division[idx].beneficiary}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet division = [ ...this.state.division ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivision[e.target.dataset.id][e.target.className] =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ division });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"beneficiary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor={shareId} style={{ color: 'white', fontSize: '1.2em' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`Percentage to be given to Beneficiary #${idx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={shareId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={shareId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.division[idx].share}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet division = [ ...this.state.division ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivision[e.target.dataset.id][e.target.className] =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ division });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"share\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t<Button icon labelPosition=\"right\" onClick={this.addDivision}>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\" />\r\n\t\t\t\t\t\t\t\t\tBeneficiary\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.state.division.map((val, idx) => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveBeneficiary(idx);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"minus\" />\r\n\t\t\t\t\t\t\t\t\tBeneficiary\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tPing Information\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Periodic CheckIn (In minutes)</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.checkInTime}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ checkInTime: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n\t\t\t\t\t\t\t<Button primary type=\"submit\" value=\"Submit\" loading={this.state.loading}>\r\n\t\t\t\t\t\t\t\tCreate Will\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WillNew;\r\n"]},"metadata":{},"sourceType":"module"}