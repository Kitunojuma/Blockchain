{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/layouts/Layout2';\nimport { Form, Button, Message } from 'semantic-ui-react';\n\nconst {\n  ethwill\n} = require('./../EtherWills');\n\nconst {\n  wills\n} = require('./../wills');\n\nimport { Router } from '../../routes';\n\nclass Selfdestruct extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: '',\n      code: '',\n      willAddress: '',\n      permission: 'denied',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      let will = await wills();\n      let etherwill = await ethwill(this.state.willAddress);\n      await etherwill.methods.deleteWill(this.state.code).send({\n        from: this.state.account\n      });\n      await will.methods.deleteWill().send({\n        from: this.state.account\n      });\n      this.setState({\n        loading: false\n      });\n      Router.pushRoute('/' + this.state.account);\n    });\n\n    _defineProperty(this, \"Back\", async event => {\n      event.preventDefault();\n      Router.pushRoute('/' + this.state.account);\n    });\n  }\n\n  async componentDidMount() {\n    let will = await wills();\n    this.setState({\n      account: window.account\n    });\n    const willAddress = await will.methods.getTestor(window.account).call({\n      from: window.account\n    });\n    this.setState({\n      willAddress\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1000px'\n      }\n    }, __jsx(Layout, null, __jsx(\"div\", {\n      style: {\n        marginTop: '30px'\n      }\n    }, __jsx(Message, {\n      negative: true\n    }, __jsx(Message.Header, null, \"BEWARE:\"), __jsx(\"p\", null, \"If you are sure about this then enter code of the will \", this.state.willAddress, \" and the press Selfdestruct button.\"))), __jsx(Message, {\n      warning: true\n    }, __jsx(Message.Header, null, \"Code for will:\"), __jsx(\"p\", null, this.state.willAddress)), __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"input\", {\n      value: this.state.code,\n      onChange: event => this.setState({\n        code: event.target.value\n      })\n    })), __jsx(Button, {\n      inverted: true,\n      color: \"red\",\n      value: \"Submit\",\n      loading: this.state.loading\n    }, \"Selfdestruct Will\"), __jsx(Button, {\n      primary: true,\n      type: \"button\",\n      onClick: this.Back\n    }, \"Back\"))));\n  }\n\n}\n\nexport default Selfdestruct;","map":{"version":3,"sources":["C:/Users/nitin/Documents/github/EtherWills/pages/will/selfdestruct.js"],"names":["React","Component","Layout","Form","Button","Message","ethwill","require","wills","Router","Selfdestruct","account","code","willAddress","permission","loading","event","preventDefault","setState","will","etherwill","state","methods","deleteWill","send","from","pushRoute","componentDidMount","window","getTestor","call","render","backgroundColor","height","marginTop","onSubmit","target","value","Back"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport { Form, Button, Message } from 'semantic-ui-react';\r\nconst { ethwill } = require('./../EtherWills');\r\nconst { wills } = require('./../wills');\r\nimport { Router } from '../../routes';\r\n\r\nclass Selfdestruct extends Component {\r\n    state = {\r\n        account:'',\r\n        code:'',\r\n        willAddress:'',\r\n\t\tpermission: 'denied',\r\n\t\tloading: false\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let will = await wills();\r\n        this.setState({account:window.account})\r\n        const willAddress = await will.methods.getTestor(window.account).call({ from: window.account });\r\n\t\tthis.setState({ willAddress });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true})\r\n        let will = await wills();\r\n        let etherwill = await ethwill(this.state.willAddress);\r\n        await etherwill.methods.deleteWill(this.state.code).send({from:this.state.account});\r\n\t\tawait will.methods.deleteWill().send({from:this.state.account});\r\n\t\tthis.setState({loading: false})\r\n        Router.pushRoute('/'+this.state.account)  \r\n\t}\r\n\t\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+this.state.account) \r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<div style={{ marginTop: '30px' }}>\r\n\t\t\t\t\t\t<Message negative>\r\n\t\t\t\t\t\t\t<Message.Header>BEWARE:</Message.Header>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIf you are sure about this then enter code of the will {this.state.willAddress} and the\r\n\t\t\t\t\t\t\t\tpress Selfdestruct button.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Message warning>\r\n\t\t\t\t\t\t<Message.Header>Code for will:</Message.Header>\r\n\t\t\t\t\t\t<p>{this.state.willAddress}</p>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={this.state.code}\r\n\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ code: event.target.value })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t<Button inverted color='red' value=\"Submit\" loading={this.state.loading}>\r\n\t\t\t\t\t\t\tSelfdestruct Will\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Selfdestruct;"]},"metadata":{},"sourceType":"module"}