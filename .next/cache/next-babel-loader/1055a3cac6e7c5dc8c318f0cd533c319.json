{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Message, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/layouts/Layout2';\nimport ipfs from './../../ethereum/ipfs';\nimport { Router } from '../../routes';\n\nconst {\n  wills\n} = require('./../wills');\n\nconst bs58 = require('bs58');\n\nclass WillNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      privateKey: '',\n      stringSecretKey: '',\n      division: [{\n        beneficiary: '',\n        share: ''\n      }],\n      checkInTime: '',\n      errorMessage: '',\n      account: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (Notification.permission !== 'denied') {\n        Notification.requestPermission().then(async permission => {\n          if (permission === 'granted') {\n            this.setState({\n              loading: true,\n              errorMessage: ''\n            });\n            let will = await wills();\n            let b = [];\n            let s = [];\n            let division = this.state.division;\n\n            for (let i = 0; i < this.state.division.length; i++) {\n              console.log(this.state.division[i]);\n              let publicAddress = await window.torus.getPublicAddress({\n                verifier: \"google\",\n                verifierId: division[i].beneficiary\n              });\n              console.log(publicAddress);\n              b.push(publicAddress);\n              s.push(division[i].share);\n            }\n\n            const pk = window.web3.eth.accounts.encrypt(this.state.privateKey, this.state.stringSecretKey);\n            const pk_json = JSON.stringify(pk);\n            const pk_bs58 = await ipfs.add(Buffer.from(pk_json));\n            const s_bs58 = await ipfs.add(Buffer.from(this.state.stringSecretKey));\n            const pk_bytes = bs58.decode(pk_bs58[0].hash);\n            const s_bytes = bs58.decode(s_bs58[0].hash);\n            const pk_hash = '0x' + pk_bytes.slice(2).toString('hex');\n            const s_hash = '0x' + s_bytes.slice(2).toString('hex');\n\n            try {\n              await will.methods.WillCreation(b, s, pk_hash, s_hash, this.state.checkInTime).send({\n                from: this.state.account\n              });\n            } catch (err) {\n              this.setState({\n                errorMessage: err.message\n              });\n            }\n\n            this.setState({\n              loading: false\n            });\n            Router.pushRoute('/' + window.account);\n          } else {\n            alert(\"Application not accessible\");\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"addDivision\", async event => {\n      event.preventDefault();\n      this.setState(prevState => ({\n        division: [...prevState.division, {\n          beneficiary: '',\n          share: ''\n        }]\n      }));\n    });\n\n    _defineProperty(this, \"Back\", async event => {\n      event.preventDefault();\n      Router.pushRoute('/' + this.state.account);\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      account: window.account\n    });\n  }\n\n  handleRemoveBeneficiary(idx) {\n    let someArray = this.state.division;\n    someArray.splice(idx, 1);\n    this.setState({\n      division: someArray\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1500px'\n      }\n    }, __jsx(Layout, null, __jsx(\"div\", {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(\"h2\", {\n      className: \"ui icon center aligned header\",\n      style: {\n        color: 'white'\n      }\n    }, __jsx(\"i\", {\n      \"aria-hidden\": \"true\",\n      class: \"file code icon\",\n      style: {\n        color: 'white'\n      }\n    }), \"Create A New Will Here\")), __jsx(Button, {\n      primary: true,\n      type: \"button\",\n      onClick: this.Back,\n      style: {\n        marginTop: '30px',\n        marginBottom: '15px'\n      }\n    }, \"Back\"), __jsx(\"div\", {\n      className: \"ui container\"\n    }, __jsx(\"h3\", {\n      className: \"ui dividing header\",\n      style: {\n        color: 'white',\n        fontSize: '1.5em'\n      }\n    }, \"Testor Infomation\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: 'white',\n        fontSize: '1.2em'\n      }\n    }, \"Private Key\"), __jsx(\"input\", {\n      type: \"password\",\n      value: this.state.privateKey,\n      onChange: event => this.setState({\n        privateKey: event.target.value\n      })\n    })), __jsx(\"h3\", {\n      className: \"ui dividing header\",\n      style: {\n        color: 'white',\n        fontSize: '1.5em'\n      }\n    }, \"Information For The Hashing Of Your Private Key\"), __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: 'white',\n        fontSize: '1.2em'\n      }\n    }, \"Secret Key\"), __jsx(\"input\", {\n      value: this.state.stringSecretKey,\n      onChange: event => this.setState({\n        stringSecretKey: event.target.value\n      })\n    })), __jsx(\"h3\", {\n      className: \"ui dividing header\",\n      style: {\n        color: 'white',\n        fontSize: '1.5em'\n      }\n    }, \"Beneficiary Information\"), this.state.division.map((val, idx) => {\n      let beneficiaryId = `beneficiary-${idx}`,\n          shareId = `share-${idx}`;\n      return __jsx(\"div\", {\n        key: idx\n      }, __jsx(\"div\", {\n        style: {\n          marginTop: '15px'\n        }\n      }, __jsx(Form.Field, null, __jsx(\"label\", {\n        htmlFor: beneficiaryId,\n        style: {\n          color: 'white',\n          fontSize: '1.2em'\n        }\n      }, `Google email address for Beneficiary #${idx + 1}`), __jsx(\"input\", {\n        type: \"text\",\n        name: beneficiaryId,\n        \"data-id\": idx,\n        id: beneficiaryId,\n        value: this.state.division[idx].beneficiary,\n        onChange: e => {\n          let division = [...this.state.division];\n          division[e.target.dataset.id][e.target.className] = e.target.value;\n          this.setState({\n            division\n          });\n        },\n        className: \"beneficiary\"\n      }))), __jsx(\"div\", {\n        style: {\n          marginTop: '15px'\n        }\n      }, __jsx(Form.Field, null, __jsx(\"label\", {\n        htmlFor: shareId,\n        style: {\n          color: 'white',\n          fontSize: '1.2em'\n        }\n      }, `Percentage to be given to Beneficiary #${idx + 1}`), __jsx(\"input\", {\n        type: \"number\",\n        name: shareId,\n        \"data-id\": idx,\n        id: shareId,\n        value: this.state.division[idx].share,\n        onChange: e => {\n          let division = [...this.state.division];\n          division[e.target.dataset.id][e.target.className] = e.target.value;\n          this.setState({\n            division\n          });\n        },\n        className: \"share\"\n      }))));\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '15px'\n      }\n    }, __jsx(Button, {\n      icon: true,\n      labelPosition: \"right\",\n      onClick: this.addDivision\n    }, __jsx(Icon, {\n      name: \"plus\"\n    }), \"Beneficiary\"), __jsx(Button, {\n      icon: true,\n      labelPosition: \"right\",\n      onClick: () => {\n        this.state.division.map((val, idx) => {\n          this.handleRemoveBeneficiary(idx);\n        });\n      }\n    }, __jsx(Icon, {\n      name: \"minus\"\n    }), \"Beneficiary\")), __jsx(\"h3\", {\n      className: \"ui dividing header\",\n      style: {\n        color: 'white',\n        fontSize: '1.5em'\n      }\n    }, \"Ping Information\"), __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: 'white',\n        fontSize: '1.2em'\n      }\n    }, \"Periodic CheckIn (In minutes)\"), __jsx(\"input\", {\n      type: \"number\",\n      value: this.state.checkInTime,\n      onChange: event => this.setState({\n        checkInTime: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      type: \"submit\",\n      value: \"Submit\",\n      loading: this.state.loading\n    }, \"Create Will\")))));\n  }\n\n}\n\nexport default WillNew;","map":{"version":3,"sources":["C:/Users/nitin/Desktop/Blockchain-project/Blockchain-project/EtherWills/pages/will/new.js"],"names":["React","Component","Form","Button","Message","Icon","Layout","ipfs","Router","wills","require","bs58","WillNew","privateKey","stringSecretKey","division","beneficiary","share","checkInTime","errorMessage","account","loading","event","preventDefault","setState","Notification","permission","requestPermission","then","will","b","s","state","i","length","console","log","publicAddress","window","torus","getPublicAddress","verifier","verifierId","push","pk","web3","eth","accounts","encrypt","pk_json","JSON","stringify","pk_bs58","add","Buffer","from","s_bs58","pk_bytes","decode","hash","s_bytes","pk_hash","slice","toString","s_hash","methods","WillCreation","send","err","message","pushRoute","alert","prevState","componentDidMount","handleRemoveBeneficiary","idx","someArray","splice","render","backgroundColor","height","marginTop","color","Back","marginBottom","fontSize","onSubmit","target","value","map","val","beneficiaryId","shareId","e","dataset","id","className","addDivision"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Message, Icon } from 'semantic-ui-react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport ipfs from './../../ethereum/ipfs';\r\nimport { Router } from '../../routes';\r\nconst { wills } = require('./../wills');\r\nconst bs58 = require('bs58');\r\n\r\nclass WillNew extends Component {\r\n\tstate = {\r\n\t\tprivateKey: '',\r\n\t\tstringSecretKey: '',\r\n\t\tdivision: [ { beneficiary: '', share: '' } ],\r\n\t\tcheckInTime: '',\r\n\t\terrorMessage: '',\r\n\t\taccount: '',\r\n\t\tloading: false\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.setState({ account: window.account });\r\n\t}\r\n\r\n\tonSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true})\r\n\t\tif(Notification.permission!=='denied'){\r\n\t\t\tNotification.requestPermission().then( async (permission)=>{\r\n\t\t\t\tif(permission==='granted'){\r\n\t\t\t\t\tthis.setState({ loading: true, errorMessage: '' });\r\n\t\t\t\t\tlet will = await wills();\r\n\t\t\t\t\tlet b = [];\r\n\t\t\t\t\tlet s = [];\r\n\t\t\t\t\tlet division = this.state.division;\r\n\t\t\t\t\tfor (let i = 0; i < this.state.division.length; i++) {\r\n\t\t\t\t\t\tconsole.log(this.state.division[i]);\r\n\t\t\t\t\t\tlet publicAddress = await window.torus.getPublicAddress({\r\n\t\t\t\t\t\t\tverifier: \"google\",\r\n  \t\t\t\t\t\t\tverifierId: division[i].beneficiary\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(publicAddress);\r\n\t\t\t\t\t\tb.push(publicAddress);\r\n\t\t\t\t\t\ts.push(division[i].share);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst pk = window.web3.eth.accounts.encrypt(this.state.privateKey, this.state.stringSecretKey);\r\n\t\t\t\t\tconst pk_json = JSON.stringify(pk);\r\n\t\t\t\t\tconst pk_bs58 = await ipfs.add(Buffer.from(pk_json));\r\n\t\t\t\t\tconst s_bs58 = await ipfs.add(Buffer.from(this.state.stringSecretKey));\r\n\t\t\t\t\tconst pk_bytes = bs58.decode(pk_bs58[0].hash);\r\n\t\t\t\t\tconst s_bytes = bs58.decode(s_bs58[0].hash);\r\n\t\t\t\t\tconst pk_hash = '0x' + pk_bytes.slice(2).toString('hex');\r\n\t\t\t\t\tconst s_hash = '0x' + s_bytes.slice(2).toString('hex');\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait will.methods.WillCreation(b, s, pk_hash, s_hash, this.state.checkInTime).send({\r\n\t\t\t\t\t\t\tfrom: this.state.account\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthis.setState({ errorMessage: err.message });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\t\tRouter.pushRoute('/'+window.account)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(\"Application not accessible\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\taddDivision = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tdivision: [ ...prevState.division, { beneficiary: '', share: '' } ]\r\n\t\t}));\r\n\t};\r\n\r\n\thandleRemoveBeneficiary(idx) {\r\n\t\tlet someArray = this.state.division;\r\n\t\tsomeArray.splice(idx, 1);\r\n\t\tthis.setState({ division: someArray });\r\n\t}\r\n\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+this.state.account) \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1500px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<div style={{ marginTop: '20px' }}>\r\n\t\t\t\t\t\t<h2 className=\"ui icon center aligned header\" style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t<i aria-hidden=\"true\" class=\"file code icon\" style={{ color: 'white' }} />\r\n\t\t\t\t\t\t\tCreate A New Will Here\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back} style = {{marginTop: '30px',marginBottom: '15px'}}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<div className=\"ui container\">\r\n\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\tTestor Infomation\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Private Key</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.privateKey}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ privateKey: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tInformation For The Hashing Of Your Private Key\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Secret Key</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.stringSecretKey}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ stringSecretKey: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tBeneficiary Information\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t{this.state.division.map((val, idx) => {\r\n\t\t\t\t\t\t\t\tlet beneficiaryId = `beneficiary-${idx}`,\r\n\t\t\t\t\t\t\t\t\tshareId = `share-${idx}`;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'white', fontSize: '1.2em' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>{`Google email address for Beneficiary #${idx + 1}`}</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={beneficiaryId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.division[idx].beneficiary}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet division = [ ...this.state.division ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivision[e.target.dataset.id][e.target.className] =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ division });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"beneficiary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor={shareId} style={{ color: 'white', fontSize: '1.2em' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`Percentage to be given to Beneficiary #${idx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={shareId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={shareId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.division[idx].share}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet division = [ ...this.state.division ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivision[e.target.dataset.id][e.target.className] =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ division });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"share\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t<Button icon labelPosition=\"right\" onClick={this.addDivision}>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\" />\r\n\t\t\t\t\t\t\t\t\tBeneficiary\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.state.division.map((val, idx) => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveBeneficiary(idx);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"minus\" />\r\n\t\t\t\t\t\t\t\t\tBeneficiary\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h3 className=\"ui dividing header\" style={{ color: 'white', fontSize: '1.5em' }}>\r\n\t\t\t\t\t\t\t\tPing Information\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label style={{ color: 'white', fontSize: '1.2em' }}>Periodic CheckIn (In minutes)</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.checkInTime}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ checkInTime: event.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n\t\t\t\t\t\t\t<Button primary type=\"submit\" value=\"Submit\" loading={this.state.loading}>\r\n\t\t\t\t\t\t\t\tCreate Will\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WillNew;\r\n"]},"metadata":{},"sourceType":"module"}