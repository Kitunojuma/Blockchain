{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layouts/Layout2';\nimport { Form, Button, Message } from 'semantic-ui-react';\n\nvar _require = require('./../EtherWills'),\n    ethwill = _require.ethwill;\n\nvar _require2 = require('./../wills'),\n    wills = _require2.wills;\n\nimport { Router } from '../../routes';\n\nvar Selfdestruct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Selfdestruct, _Component);\n\n  function Selfdestruct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Selfdestruct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Selfdestruct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: '',\n      code: '',\n      willAddress: '',\n      permission: 'denied',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var will, etherwill;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(wills());\n\n            case 4:\n              will = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(ethwill(_this.state.willAddress));\n\n            case 7:\n              etherwill = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(etherwill.methods.deleteWill(_this.state.code).send({\n                from: _this.state.account\n              }));\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(will.methods.deleteWill().send({\n                from: _this.state.account\n              }));\n\n            case 12:\n              _this.setState({\n                loading: false\n              });\n\n              Router.pushRoute('/' + _this.state.account);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Back\", function _callee2(event) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              Router.pushRoute('/' + _this.state.account);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Selfdestruct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var will, willAddress;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(wills());\n\n            case 2:\n              will = _context3.sent;\n              this.setState({\n                account: window.account\n              });\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(will.methods.getTestor(window.account).call({\n                from: window.account\n              }));\n\n            case 6:\n              willAddress = _context3.sent;\n              this.setState({\n                willAddress: willAddress\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: 'black',\n          height: '1000px'\n        }\n      }, __jsx(Layout, null, __jsx(\"div\", {\n        style: {\n          marginTop: '30px'\n        }\n      }, __jsx(Message, {\n        negative: true\n      }, __jsx(Message.Header, null, \"BEWARE:\"), __jsx(\"p\", null, \"If you are sure about this then enter code of the will \", this.state.willAddress, \" and the press Selfdestruct button.\"))), __jsx(Message, {\n        warning: true\n      }, __jsx(Message.Header, null, \"Code for will:\"), __jsx(\"p\", null, this.state.willAddress)), __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"input\", {\n        value: this.state.code,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            code: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        inverted: true,\n        color: \"red\",\n        value: \"Submit\",\n        loading: this.state.loading\n      }, \"Selfdestruct Will\"), __jsx(Button, {\n        primary: true,\n        type: \"button\",\n        onClick: this.Back\n      }, \"Back\"))));\n    }\n  }]);\n\n  return Selfdestruct;\n}(Component);\n\nexport default Selfdestruct;","map":{"version":3,"sources":["C:/Users/nitin/Documents/github/EtherWills/pages/will/selfdestruct.js"],"names":["React","Component","Layout","Form","Button","Message","require","ethwill","wills","Router","Selfdestruct","account","code","willAddress","permission","loading","event","preventDefault","setState","will","state","etherwill","methods","deleteWill","send","from","pushRoute","window","getTestor","call","backgroundColor","height","marginTop","onSubmit","target","value","Back"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/layouts/Layout2';\r\nimport { Form, Button, Message } from 'semantic-ui-react';\r\nconst { ethwill } = require('./../EtherWills');\r\nconst { wills } = require('./../wills');\r\nimport { Router } from '../../routes';\r\n\r\nclass Selfdestruct extends Component {\r\n    state = {\r\n        account:'',\r\n        code:'',\r\n        willAddress:'',\r\n\t\tpermission: 'denied',\r\n\t\tloading: false\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let will = await wills();\r\n        this.setState({account:window.account})\r\n        const willAddress = await will.methods.getTestor(window.account).call({ from: window.account });\r\n\t\tthis.setState({ willAddress });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true})\r\n        let will = await wills();\r\n        let etherwill = await ethwill(this.state.willAddress);\r\n        await etherwill.methods.deleteWill(this.state.code).send({from:this.state.account});\r\n\t\tawait will.methods.deleteWill().send({from:this.state.account});\r\n\t\tthis.setState({loading: false})\r\n        Router.pushRoute('/'+this.state.account)  \r\n\t}\r\n\t\r\n\tBack = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tRouter.pushRoute('/'+this.state.account) \r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: 'black', height: '1000px' }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<div style={{ marginTop: '30px' }}>\r\n\t\t\t\t\t\t<Message negative>\r\n\t\t\t\t\t\t\t<Message.Header>BEWARE:</Message.Header>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIf you are sure about this then enter code of the will {this.state.willAddress} and the\r\n\t\t\t\t\t\t\t\tpress Selfdestruct button.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Message warning>\r\n\t\t\t\t\t\t<Message.Header>Code for will:</Message.Header>\r\n\t\t\t\t\t\t<p>{this.state.willAddress}</p>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={this.state.code}\r\n\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ code: event.target.value })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t<Button inverted color='red' value=\"Submit\" loading={this.state.loading}>\r\n\t\t\t\t\t\t\tSelfdestruct Will\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button primary type=\"button\" onClick={this.Back}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Selfdestruct;"]},"metadata":{},"sourceType":"module"}